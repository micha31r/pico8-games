pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- winter gifts
-- michael ren (pixbits)
-- a game for lowrez game jam
function _init()
	-- game stuff
	poke(0x5f2c,3) -- change to 64x64 rez
	music() -- my hard work(took me one and half hours)
	mode=0 -- 0=intro, 1=select level, 2=playing
	bg_color=7
	shake=0
	camera_x, camera_y = 60*8, 31*8
	-- transition between scenes
	transit_count=9 -- set to zero to trigger a transit
	transit_max=9
	transit_timer=0
	transit_color=0
	-- change mode
	change_mode_to=nil
	change_mode_timer=0
	-- achievements
	delivered=0
	start_time=nil
	finished_time=nil
	creature_eliminated=0
	bullet_used=0
	-- house related things
	enter_room=false
	active_mat=0
	make_box_btn=0
	craft_table=false
	craft_progress=0
	-- creatures' spawn point
	spawn_point={}
	creature:find_spawn_point()
	-- intro related things
	start_text_counter = 0
	-- sign related things
	if rnd(2) < 1 then 
		sign_text="deliver gift!"
	else
		sign_text="shoot trees!"
	end
	sign_length=#sign_text
	current_length=0
	-- spawn things
	mat:make()
	player:make(65*8,36*8)
end

-- player
player={}
function player:make(x,y)
	player.x=x
	player.y=y
	player.box=true
	player.speed=2
	player.max_frame=1
	player.current_frame=0
	player.ani_delay=0
	player.step_timer=0
	player.dir=1 -- 1=left, 2=right, 3=down, 4=up
	player.health=4
	player.energy=4
	player.tired_timer=50
	player.alive=true
	player.spr_map={1,3,1,5}
end

function player:update()
	if btn(⬆️) then
		self.y -= self.speed
		if collide(self.x,self.y,0) or border_collide(self.x,self.y) then
			self.y += self.speed
			camera_y += self.speed
		end
		self.dir = 4
		self.ani_delay += 1
		camera_y -= player.speed
		if not enter_room then
			if self.step_timer > 3 then
				step:make(self.x,self.y)
				self.step_timer = 0
			else
				self.step_timer += 1
			end
		end
	end
	if btn(⬇️) then
		self.y += self.speed
		if collide(self.x,self.y,0) or border_collide(self.x,self.y) then
			self.y -= self.speed
			camera_y -= self.speed
		end
		self.dir = 3
		self.ani_delay += 1
		camera_y += self.speed
		if not enter_room then
			if self.step_timer > 3 then
				step:make(self.x,self.y)
				self.step_timer = 0
			else
				self.step_timer += 1
			end
		end
	end
	if btn(⬅️) then
		self.x -= self.speed
		if collide(self.x,self.y,0) or border_collide(self.x,self.y) then
			self.x += self.speed
			camera_x += self.speed
		end
		self.dir = 1
		self.ani_delay += 1
		camera_x -= self.speed
		if not enter_room then
			if self.step_timer > 3 then
				step:make(self.x,self.y)
				self.step_timer = 0
			else
				self.step_timer += 1
			end
		end
	end
	if btn(➡️) then
		self.x += self.speed
		if collide(self.x,self.y,0) or border_collide(self.x,self.y) then
			self.x -= self.speed
			camera_x -= self.speed
		end
		self.dir = 2
		self.ani_delay += 1
		camera_x += player.speed
		if not enter_room then
			if self.step_timer > 3 then
				step:make(self.x,self.y)
				self.step_timer = 0
			else
				self.step_timer += 1
			end
		end
	end
	if not enter_room then
		if btnp(❎) then
			if self.box then
				box:make(self.x, self.y)
				self.box = false
			end	
		end
		if btnp(🅾️) then
			if collide(self.x, self.y-4, 5) then
				if self.alive then
					change_mode_to = 3
					if transit_count == transit_max then
						transit_count = 0
					end
				end
			else
				bullet:make(self.x, self.y, self.dir)
				bullet_used += 1
				sfx(10)
			end
		end
	else
		if btnp(🅾️) then 
			if collide(self.x, self.y, 6) then
				change_mode_to = 2
				if transit_count == transit_max then
					transit_count = 0
				end
			end
		end
	end
	if self.tired_timer > 0 then
		self.tired_timer -= 0.1
	else
		self.energy -= 1
		self.tired_timer = 50
	end
	if self.energy <= 0 or self.health <= 0 then
		if self.alive then
			change_mode_to = 4
			transit_color = 0
			transit_count = 0
			finished_time = time()
			music(-1)
			sfx(12)
			self.alive = false
		end
	end
end

function player:draw()
	if self.ani_delay >= 5 then
		if self.current_frame < self.max_frame then
			self.current_frame += 1
		else
			self.current_frame = 0
		end
		self.ani_delay = 0
	end
	spr(self.spr_map[self.dir]+self.current_frame, self.x, self.y)
end

function player:info()
	for i=1, self.health do
		spr(33, camera_x+i*4, camera_y+56)
	end
	for i=1, self.energy do
		spr(34, camera_x+32+i*4, camera_y+56)
	end
end

function player:read()
	if collide(self.x, self.y, 2) then
		print("❎", self.x, self.y-6, 2)
		if not read_sign then
			if btnp(❎) then
				read_sign = true
			end
		end
	end
	if read_sign then 
		if current_length < sign_length then
			current_length += 1
		end
		rectfill(4+camera_x, 40+camera_y, 60+camera_x, 57+camera_y, 1)
		print(sub(sign_text,1,diagolue_counter), 6+camera_x, 43+camera_y, 7)
		print("🅾️", 52+camera_x, 51+camera_y, 7)
		if btnp(🅾️) then
			read_sign = false
		end
	end
end

function player:craft()
	if enter_room then
		if collide(self.x-4, self.y, 7) then
			print("❎" ,self.x, self.y-6, 2)
			if btnp(❎) then
				if not craft_table and not self.box then
					craft_table = true
				end
			end
		end
		if craft_table then
			rectfill(8+camera_x, 16+camera_y, 56+camera_x, 40+camera_y, 7)
			print("crafting", 23+camera_x, 19+camera_y, 2)
			print("gift", 23+camera_x, 26+camera_y, 2)
			if make_box_btn == 0 then
				print("❎", 12+camera_x, 19+camera_y, 8)
				print("🅾️", 12+camera_x, 26+camera_y, 6)
			else
				print("❎", 12+camera_x, 19+camera_y, 6)
				print("🅾️", 12+camera_x, 26+camera_y, 8)
			end
			for i=0, craft_progress do
				pset(19+camera_x+i, 35+camera_y, 13)
				pset(19+camera_x+i, 36+camera_y, 2)
			end
			spr(35, 11+camera_x, 31+camera_y)
			rect(19+camera_x, 34+camera_y, 50+camera_x, 37+camera_y, 0)
			if craft_progress < 30 then
				if btnp(❎) then
					if make_box_btn == 0 then
						craft_progress += 1
					else
						craft_progress -= 1
					end
					make_box_btn = 1-flr(rnd(2))
				else if btnp(🅾️) then
					if make_box_btn == 1 then
						craft_progress += 1
					else
						craft_progress -= 1
					end
					make_box_btn = 1-flr(rnd(2))
				else if btnp(0) or btnp(1) or btnp(2) or btnp(3) then
					craft_table = false
					craft_progress = 0
				end
				end
				end
			else
				craft_table = false
				craft_progress = 0
				self.box = true
			end
		end
	end
end

apple={}
function apple:make(x,y)
	apple_property={
		x=x,
		y=y
	}
	add(apple, apple_property)
end

function apple:update()
	for item in all(apple) do
		if spr_collide(item.x, item.y, player.x, player.y) then
			if rnd(3) < 1 then
				if player.health <= 3 then
					player.health += 1
				end
			end
			if player.energy <= 3 then
				player.energy += 1
			end
			del(apple, item)
		end
	end
end

function apple:draw()
	for item in all(apple) do
		spr(102, item.x, item.y)
	end
end

beehive={}
function beehive:make(x,y)
	beehive_property={
		x=x,
		y=y
	}
	add(beehive, beehive_property)
end

function beehive:update()
	for item in all(beehive) do
		if spr_collide(item.x, item.y, player.x, player.y) then
			player.health -= 1
			for _=0, 1+flr(rnd(20)) do
				bee:make(item.x,item.y)
			end
			del(beehive, item)
		end
	end
end

function beehive:draw()
	for item in all(beehive) do
		spr(61, item.x, item.y)
	end
end

bee={}
function bee:make(x,y)
	bee_property={
		x=x,
		y=y,
		timer=3+flr(rnd(4))
	}
	add(bee, bee_property)
end

function bee:update()
	for item in all(bee) do
		if item.timer > 0 then
			item.x += 2-flr(rnd(5))
			item.y += 2-flr(rnd(5))
			item.timer -= 0.1
		else
			del(bee, item)
		end
	end
end

function bee:draw()
	for item in all(bee) do
		pset(item.x, item.y, 9)
	end
end

creature={}
function creature:make()
	if count(creature) < 30 then
		local random_indice = 1+flr(rnd(count(spawn_point)))
		local x = spawn_point[random_indice].x*8
		local y = spawn_point[random_indice].y*8
		if x < player.x-40 or x > player.x+40 then
			if y < player.y-40 or y > player.y+40 then
				creature_property={
					x=x,
					y=y,
					speed=0.5,
					max_frame=1,
					current_frame=0,
					ani_delay=0,
					timer=0,
					attack=true,
					sleep=true,
					dir=1, -- 1=left, 2=right, 3=down, 4=up
					health=3+flr(rnd(4)),
					spr_map={122,120,120,124,126}
				}
				add(creature, creature_property)
			end
		end
	end
end

function creature:find_spawn_point()
	for w=0, 105 do
		for h=0,60 do
			if not fget(mget(w,h), 0) then
				add(spawn_point, {x=w,y=h})
			end
		end
	end
end

function creature:update() 
	for item in all(creature) do
		if item.x-24 < player.x and item.x+16 > player.x then -- if player is close to creature
			if item.y-24 < player.y and item.y+16 > player.y then
				if item.dir == 5 then
					item.dir = 1
				end
			else
				item.dir = 5
			end
		else
			item.dir = 5
		end
		if item.dir ~= 5 then
			if player.x < item.x then 
				item.x -= item.speed
				if collide(item.x,item.y,0) or border_collide(item.x,item.y) then
					item.x += item.speed
				end
				item.dir = 1
				item.ani_delay += 1
			end
			if player.x > item.x then 
				item.x += item.speed
				if collide(item.x,item.y,0) or border_collide(item.x,item.y) then
					item.x -= item.speed
				end
				item.dir = 2
				item.ani_delay += 1
			end
			if player.y < item.y then 
				item.y -= item.speed
				if collide(item.x,item.y,0) or border_collide(item.x,item.y) then
					item.y += item.speed
				end
				item.dir = 4
				item.ani_delay += 1
			end
			if player.y > item.y then 
				item.y += item.speed
				if collide(item.x,item.y,0) or border_collide(item.x,item.y) then
					item.y -= item.speed
				end
				item.dir = 3
				item.ani_delay += 1
			end
		end
		for b in all(bullet) do
			if spr_collide(item.x, item.y, b.x, b.y) then
				spark:make(b.x,b.y,10+flr(rnd(10)))
				shake = 1
				item.health -= b.damage
				del(bullet, b)
			end
		end
		if item.timer < 4 then
			item.timer += 0.1
		else
			item.timer = 0
			item.attack = true
		end
		if spr_collide(item.x, item.y, player.x, player.y) then
			if item.attack == true then
				if rnd(2) > 1 then -- 50 percent of attacking the player
					player.health -= 1
					item.attack = false
				end
		 	end
		end
		if item.health <= 0 then
			del(creature, item)
			creature_eliminated += 1
		end
	end
end

function creature:draw()
	for item in all(creature) do
		if item.ani_delay >= 5 then
			if item.current_frame < item.max_frame then
				item.current_frame += 1
			else
				item.current_frame = 0
			end
			item.ani_delay = 0
		end
		spr(item.spr_map[item.dir]+item.current_frame, item.x, item.y)
	end
end

bullet={}
function bullet:make(x,y,dir)
	bullet_property={
		x=x,
		y=y,
		dir=dir,
		speed=4,
		timer=0,
		damage=2+flr(rnd(4))
	}
	add(bullet, bullet_property)
end

function bullet:update()
	for item in all(bullet) do
		item.timer += 0.1
		if item.dir == 1 then 
			item.x -= item.speed
		else if item.dir == 2 then
			item.x += item.speed
		else if item.dir == 3 then
			item.y += item.speed
		else
			item.y -= item.speed
		end
		end
		end
		if collide(item.x, item.y, 0) or item.timer > 1 then
			spark:make(item.x,item.y,10+flr(rnd(10)))
			shake = 1
			sfx(11)
			del(bullet, item)
		end
		if collide(item.x, item.y, 3) then
			if rnd(5) < 1 then
				if rnd(5) < 4 then 
					apple:make(item.x, item.y)
				else
					beehive:make(item.x, item.y)
				end
			end
		end
	end
end

function bullet:draw()
	for item in all(bullet) do
		if item.dir == 1 then
			spr(7, item.x, item.y)
		else if item.dir == 2 then
			spr(8, item.x, item.y)
		else if item.dir == 3 then
			spr(9, item.x, item.y)
		else
			spr(10, item.x, item.y)
		end
		end
		end
	end
end

box={}
function box:make(x,y)
	box_property = {
		x=x,
		y=y,
		timer=10
	}
	add(box, box_property)
end

function box:update()
	for item in all(box) do
		if item.timer <= 0 then
			if collide(item.x+3, item.y, 1) then
				particle:make(item.x,item.y,10+flr(rnd(20)))
				mat:inactive(item.x, item.y)
				sfx(13)
			end
			del(box, item)
		end
		item.timer -= 0.1
	end
end

function box:draw()
	for item in all(box) do
		spr(35, item.x, item.y)
	end
end

mat={}
function mat:make()
	for w=0,111 do -- add map_x so when map change it will not affect anything
		for h=0,63 do
			if mget(w,h) == 21 then
				add(mat, {x=w,y=h,active=false})
			end
		end
	end
end

function mat:update()
	local active_mat = 0
	for item in all(mat) do
		if item.active then
			active_mat += 1
		end
	end
	if active_mat < 3 then -- how many mats is avalible to recieve gift
		local random_indice = 1+flr(rnd(count(mat)))
		mat[random_indice].active = true
		mset(mat[random_indice].x, mat[random_indice].y, 62)
	end
end

function mat:inactive(x,y)
	for item in all(mat) do
		if x-7 < item.x*8 and x+7 > item.x*8 then
			if y-7 < item.y*8 and y+7 > item.y*8 then
				item.active = false
				delivered += 1
				mset(item.x, item.y, 21)
			end
		end
	end
end

spark={}
function spark:make(x,y,amount)
	for _=1,amount do
		local spark_property = {
			x = x,
			y = y,
			size = 3,
			life = 1+flr(rnd(6)),
			velx = -1 + rnd(2),
			vely = -1 + rnd(2),
			mass = 0.5 + rnd(2)
		}
		add(spark, spark_property)
	end
end

function spark:update()
	for item in all(spark) do
		if item.size < 0 then
			del(spark, item)
		else
			item.size -= 0.1*item.life
			item.x += item.velx / item.mass * rnd(4)
			item.y += item.vely / item.mass * rnd(4)
		end
	end
end

function spark:draw()
	for item in all(spark) do
		local color = flr(rnd(5))
		-- display different colors of circle
		if color == 0 then
			circfill(item.x, item.y, item.size, 2)
		else if color == 1 then
			circfill(item.x, item.y, item.size, 5)
		else if color == 2 then
			circfill(item.x, item.y, item.size, 6)
		else if color == 3 then
			circfill(item.x, item.y, item.size, 7)
		else if color == 4 then
			circfill(item.x, item.y, item.size, 9)
		end
		end
		end
		end
		end
	end
end

-- particle stuff
particle={}
function particle:make(x,y,amount)
	for _=1,amount do
		local particle_property = {
			x = x,
			y = y,
			timer = 2+flr(rnd(3)),
			velx = -1 + rnd(2),
			vely = -1 + rnd(2),
			mass = 0.5 + rnd(2)
		}
		add(particle, particle_property)
	end
end

function particle:update()
	for item in all(particle) do
		if item.timer < 0 then
			del(particle, item)
		else
			item.x += item.velx / item.mass * rnd(4)
			item.y += item.vely / item.mass * rnd(4)
			item.timer -= 0.1
		end
	end
end

function particle:draw()
	for item in all(particle) do
		local color = flr(rnd(2))
		-- display different colors of circle
		if color == 0 then
			pset(item.x, item.y, 2)
		else if color == 1 then
			pset(item.x, item.y, 8)
		else 
			pset(item.x, item.y, 14)
		end
		end
	end
end

step={}
function step:make(x,y)
	step_property={
		x=x,
		y=y,
		s=49
	}
	if collide(x,y,4) then
		step_property.s = 50
	end
	if count(step) > 100 then
		del(step,step[1])
	end
	add(step, step_property)
end

function step:draw()
	for item in all(step) do
		spr(item.s, item.x, item.y)
	end
end

circle={}
function circle:make(x,y,c)
	circle_property={
		x=x,
		y=y,
		size=1,
		timer=0,
		reverse=false,
		c=c
	}
	add(circle, circle_property)
end

function circle:update()
	for item in all(circle) do
		if item.timer > 2 then
			if not item.reverse then
				if item.size < 8 then
					item.size += 1
				else
					item.reverse=true
				end
			else
				item.size -= 1
			end
			item.timer = 0
		else
			item.timer += 1
		end
		if item.size == 0 then
			del(circle, item)
		end
	end
end

function circle:draw()
	for item in all(circle) do
		circfill(item.x+camera_x, item.y+camera_y, item.size, item.c)
	end
end

snow = {}

function snow:make() 
	if count(snow) < 20 then
		snow_property = {
			x = -2,
			y = 1+flr(rnd(62)),
			speed = 1+flr(rnd(2))
		}
		add(snow, snow_property)
	end
end

function snow:update()
	for item in all(snow) do
		item.y += -1+flr(rnd(3))
		item.x += item.speed
		if item.x > 64 then
			del(snow, item)
		end
	end
end

function snow:display()
	for item in all(snow) do
		pset(item.x+camera_x, item.y+camera_y, 7)
	end
end

function do_shake() -- shake camera
	if shake == 1 then
		shakex = 4-rnd(8) -- generate random amount of shaking
	  	shakey = 4-rnd(8)
	end
	if shake > 0 then
		shakex *= shake -- times by shake
	  	shakey *= shake 
		camera_x += shakex
		camera_y += shakey
		shake = shake*0.5 -- reduce shake
	end
	if shake < 0.05 then -- just set shake to zero if it's too low
		shake = 0
	end
end

function center_camera()
	if camera_x+28 < player.x then 
		camera_x += 1
	end
	if camera_x+28 > player.x then 
		camera_x -= 1
	end
	if camera_y+28 < player.y then 
		camera_y += 1
	end
	if camera_y+28 > player.y then 
		camera_y -= 1
	end
end

function collide(x,y,flag) -- add map pos because level changes
	local x1, y1=(x+6)/8, (y+5)/8
    local x2, y2=(x+1)/8, (y+7)/8
    local a=fget(mget(x1,y1),flag)
    local b=fget(mget(x1,y2),flag)
    local c=fget(mget(x2,y2),flag)
    local d=fget(mget(x2,y1),flag)
    collision=a or b or c or d
	return collision
end 

function border_collide(x,y) 
	if mode ~= 3 then
	    if x < 0 or x > 113*8 or y < 0 or y > 62*8 then
	    	return true
	    end
	end
end

function spr_collide(x1,y1,x2,y2)
	if x1-8 < x2 and x1+8 > x2 or x1 < x2+8 and x1+8 > x2+8 then
		if y1-8 < y2 and y1+8 > y2 or y1 < y2+8 and y1+8 > y2+8 then
			return true
		end
	end
end

function transit(c)
	if transit_count < transit_max then
		if transit_timer > 1 then
			for h=0, 8, 1 do
				circle:make(transit_count*8,h*8,c)
			end
			transit_count += 1
			transit_timer = 0
		else
			transit_timer += 1
		end
	end
	circle.update()
	circle.draw()
end	

function change_mode()
	if change_mode_to ~= nil then
		if change_mode_timer > 4 then
			mode = change_mode_to
			change_mode_to = nil
			change_mode_timer=0
		else
			change_mode_timer += 0.1
		end
	end
end

function intro()
	rect(camera_x+10, camera_y+3, camera_x+52, camera_y+21, 2)
	print("winter", camera_x+17, camera_y+7, 6)
	print("winter", camera_x+16, camera_y+6, 1)
	print("gifts", camera_x+27, camera_y+14, 6)
	print("gifts", camera_x+26, camera_y+13, 2)
	-- not the most efficient way of doing it
	if start_text_counter < 2 then
		if start_text_counter > 1 then
			print("PRESS X", camera_x+18, camera_y+53, 2)
		else
			print("PRESS X", camera_x+18, camera_y+54, 2)
		end
		start_text_counter += 0.1
	else
		print("PRESS X", camera_x+18, camera_y+54, 2)
		start_text_counter = 0
	end
	spr(4, camera_x+17, camera_y+12)
	spr(74, camera_x+24, camera_y+22, 2, 3)
	spr(110, camera_x+16, camera_y+38)
	spr(35, camera_x+21, camera_y+42)
	if btn(❎) then
		start_time=time()
		change_mode_to=2
		if transit_count == transit_max then
			transit_count = 0
		end
	end
end

function gameover()
	print("GAMEOVER!!",14+camera_x, 7+camera_y,2)
	print("ACHIEVEMENTS",10+camera_x, 14+camera_y,2)
	spr(110, 10+camera_x, 22+camera_y) -- creature
	spr(35, 10+camera_x, 32+camera_y) -- gift box
	spr(79, 10+camera_x, 42+camera_y) -- bullet
	print(creature_eliminated, 20+camera_x, 23+camera_y, 0)
	print(delivered, 20+camera_x, 34+camera_y, 0)
	print(bullet_used, 20+camera_x, 44+camera_y, 0)
	print("⧗ "..finished_time-start_time, 10+camera_x, 53+camera_y, 0)
end

function _update()
	change_mode()
	if mode == 2 then
		snow:make() 
		snow.update()
		creature:make()
		player:update()
		creature:update() 
		box:update()
		particle:update()
		bullet:update()
		spark:update()
		apple:update()
		beehive:update()
		bee:update()
		mat:update()
		center_camera()
		do_shake()
	end
	if mode == 3 then
		player:update()
		center_camera()
	end
end

function _draw()
	camera(camera_x, camera_y)
	cls(bg_color)
	if mode == 0 then
		intro()
	end
	if mode == 2 then
		bg_color = 7
		if enter_room == true then
			camera_x, camera_y = 60*8, 31*8 -- spawn point
			player.x, player.y = 65*8, 36*8 -- spawn point
			enter_room = false
		end
		map(0,0,0,0,128,128)
		camera(camera_x, camera_y)
		step:draw()
		apple:draw()
		beehive:draw()
		player:draw()
		creature:draw()
		box:draw()
		bullet:draw()
		bee:draw()
		particle:draw()
		spark:draw()
		snow:display()
		player:read()
		player:info()
	end
	if mode == 3 then
		bg_color = 0
		if enter_room == false then
			camera_x, camera_y = 120*8, 56*8
			player.x, player.y = 124*8, 61*8
			enter_room = true
		end
		map(0,0,0,0,128,128)
		camera(camera_x, camera_y)
		player:draw()
		player:craft()
		player:info()
	end
	if mode == 4 then
		bg_color = 7
		gameover()
	end
	transit(0)
end

__gfx__
00000000008888000088880000888800008888000088880000888800000000000000000000000000000000005656000000000000dddddddd4444444444444444
00000000077778000777780000877770008777700088886000888860000000000000000000000000000000005560000000000000dddddddd9999999999999999
0070070007ff780007ff78000087ff700087ff700088886000888860000000000000000000000000000000005606000000000000dddddddd4444444444444444
00077000007788000077880000887700008877000088880000888800000000000000000000002000000090005560000000000000dddddddd9999999999999999
00077000002222200022222002222200022222000222220002222200000920000002900000009000000020005656000000000000dddddddd4444444422222224
007007000f22882600228226028822f002282260022222f002222860000000000000000000000000000000005560000055600000dddddddd9999999927772629
00000000002222f6002f22260f2222600222f2600222226002222f60000000000000000000000000000000005600000056560000dddddddd4444444427772124
00000000000205600000025000002500002055000000250000205500000000000000000000000000000000005000000055600000dddddddd9999999927772629
44444444000000000000000000940000000000004292929449191914000000000000000fffffff00333333333333333fffffff33000000003333333320000000
99999999000000000000000000940000000000004929292449191914444444444444444f99999f44444444444444444f99999f44004999903349999320000000
44444444099999900094000000940000009400004292929449191914444444444444444799999744444444444444444f99999f44049944993499449920000000
999999990922229009ff400009ff400009ff40004929292449191914444447777777774744444774444444444444444f44444f44049449903494499320000000
44444444092eee964944499909444000094440004292929449191914444477777777777ffffff774444444444444444fffffff44004999003349993320000000
99999999099999964444244404442000044420000444444004444440447777777777777999999974444444444444444999999944000040663333436620000000
44444444044444450444266004442660044426600000000000000000477777777777777799999744444444444444444999999944000095603333956320000000
99999999044444400042560000425600004256000000000000000000477777777777777777797744444444444444444999999944000095003333953320000000
dddddddd000000000000000000000000000000000000000000000000477777777777777777777774444444444444444444444444000000003333333300000002
dd4444dd000000000000000000000000000000000000000000000000477777777777777777777774444444444444444444444444099994003999943300000002
d499994d000000000000000000ee7e00009999000060000000000600447777777777777777777774444444444444444444444444994499409944994300000002
2499994200000000000000000077770009444490000000000600000044777777777777777777777444444444ffff444444444444099449403994494300000002
22222222008080000009000000ee7e00094aaa9600000600000000004477777777777777774777744444444ffff9944444444444009994003399943300000002
d222222d008880000009900000ee7e000499994600000000000000001177777f7997777777117711111111fff999991111111111000406603334366300000002
d211112d000800000000900000226200044444450000000000600000497977ff7f97977797977994499999ffff99999999999994000956003339563300000002
d2dddd2d000000000000000000222200004444500000000000000000447277ff7117994747277444442224ff1111994442244444000950003339533300000002
44444444000000000000000000000000000000000000000000000000499977f17117199797979994499999f11111199999999994000000002e2e2e2222222222
4ff999940000000000000000000000000000000000006000000000004444774171171444272222424444444111111444222222420094000022e2e2e200000000
4f999994000000000077000000000000000000000000006000060000499979411111149977444994499999411111149999444994000090002e2e2e2200000000
499999940060000000760000000000000000000000000000000000004244724111141424226664244244224111141424226664240004440022e2e2e200000000
49999994000006000060076000000000000000000000000000000000499999411111149f94666f94499999411111149f94666f94004a99402e2e2e2200000000
22222222000000000000060000400000000090000000000000000000444442411111144441fff144444442411111144441fff144004444460222222000000000
2dddddd2000000000000000000040600000906000060000000006000499999411111149999111994499999411111149999111994004999260000000000000000
2dddddd2000000000000000000045000000450000000000000000000444444444444444444444444444444444444444444444444000422500000000000000000
00000033000000003330000000000333330000000000003333000000000000003333333333333333000000000000000000000000000000004444444400000000
000333333000003333333000000333333333300000033333333330000000000033333000033333330000000000000000000000000000000099999999000aa000
00333333333003333333333003333333333333000033333333333300000000003330000000033373000000000000000000000000000000004444444400a99900
03333333333333373333333333333333333333300333333333333330000000003330000000000333000000333300000000000000000000009999999900999900
03333333733333333333333333333333333343300333333333337330000000003300000000000033000333737363300000000000000000004444444400999900
03333333333333333333333333333333333333300333333333333330000000003300000000000033003377763333330000000000000000009444444900999900
0333b333333733333334333333333333333333303333b33333333333000000003000000000000003033336637773733000000333333000004422224400944900
03333333333333333333333333333333333333003333333333333333000000003000000000000003063737777777773000003377673330004222222400444400
03333333333333333333333333333333333333003333333333333333000000003000000000000003037777777763736000037773777733004244442400000000
003333333333333333333333333333333333300033333333333333330000000030000000000000033377377777673733003777777777733044ffff4400000000
0033333333333333333333333333333333333000033333333333b330000000003300000000000033637737777677776300377373767776304fffeff400000000
00033333333333333373333333333733333330000333333333333330000000003300000000000333373637376337766300737373777763304f988ff400000000
0003333333333333333333b3333b3333333333000333333333433330000000003330000000000333333333333333633300333373363767304f8a98f400000000
00033333333333333333333333333333333333000033333333333300000000004333000000003333033333733373333000337333333633304444444400000000
00033333333333333333733333333333333333300003333333333000000000003b33330000033333033333333333333000033333333333004111111400000000
0033333333333333333333333333333333333330000000333300000000000000333333333333333300904033373040000000403333304000dddddddd00000000
003333333333333333333333333333b3333333300000000000000000277721240377777777637360009940477440400000000944744090000002040000000000
03333333333333333333333333333333333333300000000000b04000277726293377377777673733000044497440460600000994444996060044440000000000
03333333333433333333333333333333333373300000000000040000222222246377377776777763000000994444406000000044444000600414144000000000
03333333333333333333333333333333333333000000000000088000999999993736373763377663000000944445060600000044444506062444444000000000
033333333333334333333333333333333343330000000000008fe800444444443333333333336333000004994441506000000044444150602444410000000000
003333333333333333333000333333333333300000000000008ee800999999990333377333733330000000944425060000000004442506000011140400000000
00033333333330003330000000033333330000000000000000088000444444440337777633777330000000000000000000000000000000000044444000000000
00000033330000000000000000000333000000000000000000000000999999990037766337777300000000000000000000000000000000000040040000000000
00000000333333330000003333300000000000000033330000333300dddddddd0040200004002000000204000002004000040200000400200000000000000000
00000000333333330003333333333000000000000333333003333330dddddddd0044440000444400004444000044440000444400004444000000000000000000
00333300333733330033333333733300000000003333333303333333dd4444dd0441414004414140041414400414144004444440044444400020400000204000
03333330033333330033333333333300000000003333333333333333d499994d0444444204444442244444402444444004444440044444400444404004444040
03333333033333300033333333333300000000003333333333333333d499994d0014444200144442244441002444410004111100041111004444200444442004
3333333300333300003333333333330000000000033333333333b333d444444d4041110040411100001114040011140400444404004444044444122444441224
33333333000000000003333337333000000000000333333003333330d22dd22d0444442004444400024444400044444000444440004444404111444441114444
33333333000000000000333333330000000000000033330000033300d2dddd2d0040000000000200000004000020000000000200004000000444444004444440
000000000000a5b50000000000000000000000000057000000000000000000000000000000000000000000000063a4b400000000000000000000000000000000
7181910000051515154500062636460000000000000000000000000000000000000043330000000000000000000000a4b4000000000000000000000000000000
630000000000a6b60000000000000000000000415485009564000057000052000000000052000000000000620000a5b500000000620000000000003300000000
728292c000051515154500000000000000000062000000000000000000000000000000000000000000000000000000a5b5000000000000000000000000000000
00630000a4b400a4b400000000000000000000000515151515370000670004850000000000000000000000000000a6b600000000000000000067000000000000
738393b00005151515450000000000c4d4000000000000000000006200000000000000000000000000000053000000a6b6000000000000000000000000000000
00000000a5b500a5b5000052a4b4000000000031051525154500000000000665000000004300000000a4b4000000000000003300002737000000005200000000
006100000006263636460052000000c5d500000000a4b40000005200000000000000000000000000000000000000000000000000000000000000000000000000
00000000a6b600a6b6630000a5b5000000006331051565944500000000000000000000000000000041a5b5000000000000000000000000000000000000000000
000000d10000000000a4b400000000c6d600000000a5b50000000000330000000000000052000000000000000000005300000000000000000000000000000000
000000000000000000000000a6b6a4b400000031051585954500000000000000000000000000000031a6b6000000000000000000000000000062000000546400
520000000000430000a5b500000000000000000063a6b60000000000000000000000a4b4000000000000000000000000a4b40063000000000000000000000000
0000000000000000000000000000a5b5000000000684943646000000000000005200000000006300000000000000000000003300000000000000000000556500
0000000000000000008696a4b4000000000000000000000000000000000000000000a5b5000000000000a4b400000000a5b50000000000000000000000000000
0000000000620000000000000000a6b6000000000000000000000000000000000000000000000000000067620000000052000000000000000033520000000000
000033000000000000a6b6a5b5000000000000000000000000000000000000000000a6b6000000000000a5b500000000a6b60000000063000000000000000000
000000000000000000000000000011000000000000005200000000c4d40000000000000004243444000000000000000000000000006300000000000000000000
0000000000000052000000a6b60000630000000000004300000000a4b4000000000000000000a4b40000a6b60000000000000000000000000000000000000000
0000c4d400000000000000000052000000000000000000a4b40000c5d50000004300000005151545004300000000000000000000000000000000a4b400005200
000000000000000000630000000000000000000000000000000052a5b500c4d4000000005444a5b5000000000000004300000000000000000000000000000000
0000c5d50000000000000000000000000000000000000086960000c6d643000000000000051515450000000000000000000000a4b40000004300a5b500000000
000033000052000000000000000000000000000000000000000000a6b600c5d5000000000545a6b600620000000000a4b4000000000000000000000000000000
0000c6d600000000000000000000000000000000000000a5b50000000000630000000000061636460054640000000000000000a5b50000000000a6b600000000
000000000000000000000000000000000000620000000000000000000000c6d60000a4b40646000000000000000000a5b5000000006300000000000000000000
0000000000000063000000330000000000630000003300a6b6000052000000a4b4000000000000000017170000000000005300a6b6a4b4000444000000005200
2737000000000033000000005200000000004300000007000000a4b4000000000000a5b5000000a4b4000000000000a6b6000000000000000000000000000000
00000000434100000041000000000000000000000000000000003300a4b40086960000000063530000000000000000000000000000a5b5000646000000000000
0054640000000000007181910000000000000000009515440000a5b50000c4d40000a6b6000000a5b50000000000000000000000000000000000000000000000
00000000000004144400000000000000000000000000006363000000a5b552a5b50000000000000000000063000000000000000000a6b60000c4d44300000000
000646000000001100728292c000000000000414341515450000a6b60000c5d500000000000000a6b60000000000000000000000000000000000000000000000
00000000000005154500000000003300000000000000000000000033a6b600a6b600000000000000000000000000a4b4000000435200000000c5d50063000000
00000000000063110073b393b00000000000062636263646006200000000c6d600000063a4b40000000000000000006300005300000000000000000000000000
00000000000006264600000000000000000000000053000000000000000000000000000000000000000000520000a5b5000000000000000000c6d60000000000
0000430053620000d2005100000000000000000000000000000000000000000000000000a5b50000000000000000000000000000000000000000000000000000
00000000004100000041005200000000000000000000004300000000000000000000000000000000000000000000a6b604142434440033a4b400543700000000
00000000003300000000000000000000004300000000a4b4000000000000005300000000a6b60000000000000000000000000000000000000000000000000000
33000000000000000000000000000000000000000000000000000000000000546400000000530000000000000000000005351515450000a5b500170000000000
00000000000033000000000000000000520000000000a5b500000000000000000000000000000000630000000000330000000000000000000000000000000000
00000000000000520041212121212141000000000000000000000000000004a1b1c1000000000000330000000000000006158494466300869600005424344400
00000000000000000000004300000000000000000000a6b663000000000011000000000000000000000000430000000000000000000000000000000000000000
000043000000000000310071819100000000c4d40000000000000000005305a2b2c2c00000000000000000330000000000170000000033c6d600000535154500
520000a4b40000000000000000000000000000044400000000000000002121212141000000000000000000007181910000000062000000000000000000000000
0000000000000000003111728292c0000000c5d50000000000000000330006a3b3c3b00000a4b400000000000000000053000000000000000000000515154563
a4b400a5b5000000000000000000000000000006465464000000000000310000000000000000000000000000728292c000000000000062000000000000000000
000000000000c4d400311173b3c3b0000000c6d60000620052000000000000005100000000a5b500000000a4b400000000000000000000000000000626364600
a5b500a6b60000a4b4000000070000000000000063556500000000000052000000000000000000620000000073b3c3b000000000000000000000000000000000
000000000000c5d50031000051000063000000000000000000000000000000000000635200a6b600000000a5b500000000000000005200000000000000000000
a6b60000000000a5b50004141514440000000063000000520000000000000000c4d4000000000000000000000000000000000000000000000000000000000000
000000000000c6d60000410000000000000000000000330734240700000000000000000000000000330000a6b600000000000033000000000000000000000000
00000000000000a6b6000515251545000000000000000000c4d400000000c4d4c5d50000000000000000d263000000000000000000000000f2e0f001f001e0f1
0000000000000000000000000000000000000000000027151515154400000043000000000000330052000000006300000000000000000000003300000000c4d4
000000a4b46300000000063626364600000000c4d4630000c5d500000000c5d5c6d662000000000000004200000000000000636300000000f2e0760176e4e0f1
000000000000000000000000000000000000000000009515151515450000000000000000000000000000000000000000a4b4000062000000000033000000c5d5
000000a5b50000000000000000000095370000c5d5000000c6d600000000c6d60000000000c4d40000000000000000000000000000000000f277d0d0d0e5d0f1
00000062000000000000000007630000000004243434151515151545004300000000003300000000a4b4000000000000a5b500000000000000a4b4000000c6d6
000000a6b60000000000006200000017000000c6d600c4d400005200000000000000000000c5d50000006300000000000000000000000000f203d0d077d0d0f1
0000000000000000c4d4005484000000000005151515151515151546000000520000006200000000a5b50000c4d40000a6b600000000000000a5b50000000000
00006200000000000000000000000000000000000000c5d50000000000a4b4000000630000c6d600000000a4b45300000000000000000000f277d0d0d00202f1
0000000000000000c5d5001700000000000005151515151515154500000000000000000000000000a6b60000c5d50000000000000000000000a6b60000630000
00000000a4b400620000000000000000000000000000c6d60000000000a5b5000000000000000000000000a5b50000000000000000000000f2d0d0d0d0d0d0f1
0000000000000000c6d6c4d40000000000000616263626362636460000000000000000000000000000000000c6d60000000000000000000043000000000000a4
b4000000a5b50000000000000000430000000000520000000000000000a6b6000000000000000000000000a6b6000000000000620000000000f3f3f351f3f300
00000000000000000000c5d5000000000000000000000000000000000000000000000000000000000000000000000000000000430000000000000000000000a5
b5000000a6b600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000056000000
__gff__
0000000000000000000000000000010101010101014000010101010101040401010000000100000101010100010404018100000000000001210101010100020110101010101010001010010100000100101010101010100010100101010101001010101010010001090909090909000010101010001010010000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010100000000000000000000010000000001000000000000000000000100000000010000000000000000000001010101010100000000000000000000
__map__
0000000000000000004a4b0000000000000000000000000000000000000000000000000000000000004a4b00000000000000000000000000000000000000004042434400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000004c4d000000005a5b0000330000000000000000250000000000000000000000000000000000005a5b00000000003300000000000000000000000000004951535400000000000000000000000000000000000000000000000000250000000000000000000000750000000000000000000000260000000000000000000000
0036005c5d000000006a6b000000000000004c4d00000000004c4d00000000003300000000000000006a6b0000000000000000004a4b000000260000000000726263640000000000000000000000004a4b00000000000000000000000000004a4b00000000750000000000750000004c4d000000000000000000000000000000
0000006c6d000000000000000000000000005c5d00000000005c5d000000000000000000000000000000000000002500000000005a5b000000000000000000000033000000340025000000003600005a5b00000025000000000000000000005a5b00000000000000000025004c4d005c5d000000000000000000000000000000
4c4d000000003400250000000040460025006c6d00000000006c6d000000000000004c4d003600000000000000000000000000006a6b000000000000002500000000254546000000000000000000006a6b00000000000000004a4b000000006a6b00000000000000000000005c5d006c6d000000000000000000000000000000
5c5d0075000000000000000040484973000000000000004c4d0000000000000000005c5d00000000000000000000000000000000000000004a4b000000000000000000495600000000000000000000000000004a4b000000005a5b000000000000000025000000004c4d00006c6d000000000000000000000000000000000000
6c6d0000007636004a4b000071000000000000000000255c5d0000000000350000006c6d000000002600000000004a4b00000000000000005a5b000036000000000000000000003300000000000000000000005a5b000000006a6b000000000000000000000025005c5d17181924000000000000350000000000000000000000
00000000000000005a5b000000725800000000000000006c6d00004c4d00000000000000000000000000000000005a5b00002500000000006a6b000000330000000000000000000000000000340000000000006a6b000000000000000000250000004c4d007500006c6d2728290c000000000000360000000000000000000000
0000004a4b0000336a6b00002672634200000000000000000000005c5d00004c4d00004c4d0000250000000025006a6b00000000000000000000000000000000003300000000000000000000000000000000000000000000002500330000000000005c5d000000000000373b3c0b4c4d00000000000000000000000000000000
0000005a5b00000000000000000000714d000000000036000000006c6d00005c5d00005c5d000000000000000000000000000000000000000000000000000034000000000000000000360000000000000000000076000000000000004a4b000000006c6d0000004c4d26001500005c5d00000000000000000000000000000000
0000006a6b000000000000000000005c5d00000000171819000000000000006c6d33006c6d0034004a4b000000000000254a4b000000000000004a4b0000000000340000004a4b0000000000000000000000260000340000340000005a5b0000004a4b000000005c5d00000000006c6d00000000000000000000000000000000
00000000000025004c4d004c4d00006c6d002500002728290c00000000000000004c4d00360000005a5b000000000000005a5b000000000026005a5b0000000000000000005a5b0000000000007500000000000000000000000000006a6b0000005a5b000000006c6d0000000000000000000000000000000000000000000000
3600000000004c4d5c5d005c5d0000000000000000373b3c0b00250000004c4d005c5d00000000006a6b000000000000006a6b000000000000006a6b000000000000004a4b6a6b000000002500000000004a4b00000000000000000000000000006a6b0000000000000000000000000000350000360000000000000000000000
0000000000005c5d6c6d006c6d00000000000000000015000000000000005c5d006c6d004c4d00000000000000000000000000000035121212140000000000250000005a5b000000004a4b4c4d000000005a5b4c4d0000000026004a4b25004a4b00000000000000002500340000000000000000000000000000000000000000
004c4d0000006c6d000000000000000000000000000000000000000000006c6d005c5d005c5d004c4d00003500000000000000454142434424000000000000000000006a6b000000005a5b6869000000006a6b5c5d0000000000365a5b00005a5b00000000000000000000000000000000000000000000000000000000000000
005c5d0000000000004c4d000000250000000017181924000000000000000000006c6d006c6d005c5d00000000000000003659515151515400000000000000000000000000000000006a6b5a5b000000004c4d6c6d4c4d000000006a6b00006a6b00000000000000000000004c4d000035000000350000000000000000000000
006c6d0000000000005c5d00000000000000002728290c00000000000025000000000000004c4d6c6d000000000000000072484951511e54000000330000000000003600000000000000006a6b004044005c5d00005c5d0000003600000000000000003500004546000033005c5d000000000000360000000000000000000000
00000000004c4d00006c6d0000000000000000373b3c0b00454600330034000000004c4d005c5d0000000000000000007500005951515154171819000000140000000000000034004a4b000000006064006c6d00006c6d000000000000004a4b0000000000005556000000006c6d000014141400000000000000000000000000
00000000005c5d0000000000000000000000000015000000495600000000000000005c5d006c6d250000000000000045730000551a1b1c642728290c0000130000000000404141445a5b00000025003400004a4b000000000000000000005a5b0000000000000036000000000000000000001400000000000000000000000000
00000000006c6d0000003600000033000000000026140000000000000000004c4d006c6d4c4d00000000003300000055580000002a2b2c0c373b390b0000130000250000505151546a6b0000004a4b0000005a5b004546000000000000006a6b000000004a4b0000000000000000003500000000000000000000000000000000
000000000000000000000000000000000012121212130000003300000000005c5d0000005c5d00000000000000000000710000003a3b3c0b0000000000001325000000004551515144000000005a5b0072736a6b005556000000000000000000000000005a5b0000000000000000000000000036000000000000000000000000
000026000000000000000000000000000000000000000000004c4d000036006c6d0000256c6d0000000000000000000000000000001500000000000014121300000000005548495154000000006a6b0000000000000000260000000000000000000000006a6b0000000000700000000000000000000000000000000000000000
000000000000000000000000007000000000000000000000005c5d000000000000004546000000000000000000000000000000000000000000000000260000000000000000005951540000000000004a4b000000000000000000004a4b000000000000000000000000404151414400000000004c4d0000000000000000000000
000000000000000000000040415141440000000000000000006c6d00004a4b000000554800004c4d0000000000000034000033001212121400000000004c4d002500000000005561560000000000005a5b000000000000000000005a5b000000000000002500000000505152515400004c4d005c5d0000000000000000000000
00000000171819000000005051525154000000000000000000000000005a5b00000000004c4d5c5d0000000000000000000000000000000076000045465c5d000000002600000000000000171819006a6b000033000000000000006a6b000000005942434243440000606362636400005c5d006c6d0000000000000000000000
000000002728290c0000006063626364350000000000000000000000006a6b00000000005c5d6c6d2600000034360000000000000000000000005952566c6d0025000000000000000000002728290c000000000000002500000000000000000000501a1b1c51541400000026000000006c6d0014000000000000000000000000
00003400373b3c0b002500000000000000000000000000000000000000000000003500006c6d00003600000000000000000000000000404142435151424344000000002600000000000000373b390b000000000000000000000000000035000014502a2b2c515413000000000000000000000013000000000000000000000000
00000000001500000000000000000000000000000000000000002500000000000000000000000000000000250000004a4b000000002549515153515351515400000000000072730000000000150000002500000000000000340000000025000013503a3b3c515413000000000000000000003600000000000000000000000000
00000000000000000000000000000000000000360000000034000000000000000000454600000000000000000000005a5b00000000005952515151525151540000000000000000000000000000000000000000340000000000000000000000001360621548496413000000364a4b004c4d004c4d000036000000000000000000
000000000000000000004a4b00000000000000000000000000000000000000000059515144121214000000000000006a6b004a4b00006048496271626351640000000000000000000000330040434600000000000025000000000000000000001214340000000033000000005a5b005c5d005c5d000000000000000000000000
000000000035000000005a5b00000000000000000000000000000000000000004051515154130000000000000000000000005a5b00000000000000000071000000003300000012121400004051514875000000000036000000001414000000000000000000000033000000006a6b006c6d006c6d000000000000000000000000
0000000000004a4b00006a6b00000036000000000000000000000000000000726163616364000000000000000000003300006a6b00000072730000000000000000000000004041424344005051515800000000000000000000001213000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
011e0000180551f0551c0551d055180551f0551c0551d055180551f0551c0551d055180551f0551c0551d055180551f0551c0551d055180551f0551c0551d055180551f0551c0551d055180551f0551c0551d055
011e000000000000000000000000000000000000000000001d0551d0451d0351d0351d0251c0251a0551805500000000000000000000000000000000000000001d0551d0551d0551d0551d0551f0551d0551c055
011e000000000000000000000000000000000000000000000f0731c64300000000001c6431c64300000000000f0731c64300000000001c6431c64300000000000f0731c64300000000001c6431c6430000000000
011e00002807528055000000000028075240550000000000290752907529075280752607529075000000000028075280750000000000240750000000000280752b0752d0752f0753007500000000000000000000
011e0020300752f0752d0753007500000000002d0752f0752d0752f0752b075000000000029075290752b0752907528075290752b075000000000029075290752807526075240750000000000000000000000000
011e00000c0750e0751007511075180751a0751c0751d0750c0750e0751007511075180751a0751c0751d0752b075280752b07528075290752607529075260752807524075240752407500000240750000000000
011e000000000000001c0331a6151a6151a61500000000001c0331a6151a6151a61500000000001c0331a6151a6151a61500000000001c0331a6151a6151a61500000000001c0331a6151a6151a6150000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011e000018315183151c3151831518315183151c3151831518315183151c3151831518315183151c3151831500000000000000000000000000000000000000000000000000000000000000000000000000000000
011e00002d7752b77529775000002f1552d1552b15500000307752f7752d7752f7752b7752b775000000000029075290752907528075260752807500000000002607528075290752907524075000000000000000
011000001c07300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01030000286502865028640276402764025630226301e6301c640176401163008630006301f6001e6001c60019600176001f6001f6001f6001f6001f6001f6001e6001e6001c6001a6001760014600116000d600
01160000000000000000000000000000000000000000000028075280751c0751c0751007510075100750000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100000240752b070390753707539075000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 00010243
00 00420203
00 00420204
00 00420605
02 00080209
